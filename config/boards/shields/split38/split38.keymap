/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// layers
#define COLEMAK 0
#define CHORDS   1
#define RAISE 2

// CONFIG
#define COMBO_TIMEOUT 50
#define COMBO_LAYERS 1
#define STICKY_TIMEOUT 500

// | 0  |  1  |  2  |  3  |  4  |      |  5  |  6  |  7   |  8  |  9  |
// | 10 |  11 |  12 |  13 |  14 |      |  15 |  16 |  17  |  18 |  19 |
// | 20 |  21 |  22 |  23 |  24 |      |  25 |  26 |  27  |  28 |  29 |
// |   30  |   31   |  32 |  33 |      |  34 |  35 |   36   |   37    |

&sk {
    release-after-ms = <STICKY_TIMEOUT>;
    quick-release;
};

/ {

    combos {
      compatible = "zmk,combos";
      #include "chords.dtsi"

      
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
// -----------------------------------------------------------------------------------------
// | Q |  W  |  F  |  P  |  B |      |  J  |  L  |  U   |  Y  |  ;  |
// | A |  R  |  S  |  T  |  G |      |  K  |  N  |  E   |  I  |  O  |
// | Z |  X  |  C  |  D  |  V |      |  M  |  H  |  ,   |  .  |  /  |
// |  CMD  |  CTL  |SHFT |BSPC|      |  HI | SPC |   TAIPO   |   RET   |
                bindings = <
&kp Q &kp W &kp F &kp P &kp B                    &kp J  &kp L &kp U  &kp Y     &kp SEMI  
&kp A &kp R &kp S &kp T &kp G                    &kp K  &kp N &kp E  &kp I     &kp O  
&kp Z &kp X &kp C &kp D &kp V                    &kp M  &kp H &kp COMMA  &kp DOT &kp SLASH
&kp RCTL &kp LALT &lt CHORDS SPACE &kp BSPC             &kp BSPC  &lt CHORDS SPACE &kp LALT  &kp RCTL
                >;
        };

        chord_layer {
                bindings = <
&kp R  &kp S  &kp N  &kp I  &kp TAB             &kp TAB  &kp I  &kp N  &kp S  &kp R
&kp A  &kp O  &kp T  &kp E  &kp BSPC            &kp BSPC &kp E  &kp T  &kp O  &kp A
&lt RAISE N8 &kp N4 &kp N2 &kp N1 &kp ESC             &kp ESC  &kp N1 &kp N2 &kp N4 &lt RAISE N8
 &kp LCTL &kp LALT &kp SPC  &kp LSHFT           &kp RSHFT  &kp SPC   &kp RALT   &kp RCTL
                >;
        };

        raise_layer {
                bindings = <
&bt BT_CLR  &none  &none  &none  &none           &kp C_PP  &kp C_PREV  &kp UP &none  &kp C_NEXT
&out OUT_TOG  &none  &none  &none  &none                &none  &kp LEFT  &kp DOWN &kp RIGHT  &kp APOS
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none &kp TAB &none  &kp LC(LEFT)  &kp LC(RIGHT)  &none
&kp LCTL &kp LALT &kp LSHFT &kp BSPC          &none  &none   &esctd   &none  
                >;
        };

        
        
    };
};
